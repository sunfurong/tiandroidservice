/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package cn.named.service;

import java.util.ArrayList;

import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiApplication;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;

import cn.named.service.CoreService;
import android.app.ActivityManager;
import android.app.ActivityManager.RunningServiceInfo;
import android.app.NotificationManager;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;

@Kroll.module(name = "Androidservice", id = "cn.named.service")
public class AndroidserviceModule extends KrollModule {

	// Standard Debugging variables
	private static final String LCAT = "SfrServiceModule";
	CoreService cs;
	SharedPreferences mySharedPreferences;
	SharedPreferences.Editor editor;

	// You can define constants wi®th @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;

	public AndroidserviceModule() {
		super();
	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app) {
		Log.d(LCAT, "inside onAppCreate");
		// put module init code that needs to run when the application is
		// created
	}

	// Methods
	@Kroll.method
	public String example() {
		Log.d(LCAT, "example called");
		return "hello world";
	}

	// Properties
	@Kroll.getProperty
	public String getExampleProp() {
		Log.d(LCAT, "get example property");
		return "hello world";
	}

	@Kroll.setProperty
	public void setExampleProp(String value) {
		Log.d(LCAT, "set example property: " + value);
	}

	@Kroll.method
	public void startService(String url) {
		mySharedPreferences = TiApplication.getAppCurrentActivity()
				.getSharedPreferences("named", Context.MODE_PRIVATE);
		// 实例化SharedPreferences.Editor对象（第二步）
		editor = mySharedPreferences.edit();
		Log.d("SfrServiceModule",
				"文件中得URl：" + mySharedPreferences.getString("url", "") + " 传参："
						+ url);
		Intent intent = new Intent(TiApplication.getAppCurrentActivity(),
				CoreService.class);
		if (!mySharedPreferences.getString("url", "").equals(url) && isWorked()) {
			// 当url改变的时候，且service在运行，则停掉service，然后再启动，连接websocket
			TiApplication.getInstance().stopService(intent);
		}
		Log.d("SfrServiceModule", "实际URl：" + url);

		// 用putString的方法保存数据
		editor.putString("url", url);
		// 提交当前数据
		editor.commit();
		intent.putExtra("url", url);
		Log.d("SfrServiceModule",
				"检查URl：" + mySharedPreferences.getString("url", ""));
		TiApplication.getInstance().startService(intent);
	}

	@Kroll.method
	public void startApp() {
		Intent launchIntent = TiApplication.getInstance()
				.getApplicationContext().getPackageManager()
				.getLaunchIntentForPackage("cn.baoz");
		TiApplication.getInstance().startActivity(launchIntent);
	}

	@Kroll.method
	public void clear() {
		NotificationManager notificationManager = (NotificationManager) TiApplication
				.getAppCurrentActivity()
				.getSystemService(
						TiApplication.getAppCurrentActivity().NOTIFICATION_SERVICE);
		notificationManager.cancelAll();
	}

	@Kroll.method
	public boolean getServiceState() {
		return isWorked();
	}

	public static boolean isWorked() {
		ActivityManager myManager = (ActivityManager) TiApplication
				.getAppCurrentActivity().getSystemService(
						Context.ACTIVITY_SERVICE);
		ArrayList<RunningServiceInfo> runningService = (ArrayList<RunningServiceInfo>) myManager
				.getRunningServices(100);
		for (int i = 0; i < runningService.size(); i++) {
			if (runningService.get(i).service.getClassName().toString()
					.equals("cn.named.service.CoreService")) {
				return true;
			}
		}
		return false;
	}

}
